name: CICD for Nodejs Application with Docker
run-name: ${{ github.actor }} is running CICD for Nodejs Application with Docker

on:
  push:
    branches: 
        - feature/*
        - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: print environment
        run: | 
          echo "The current environment is ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

      - name: your action
        run: |
          echo "Now you can continue with your project!"

  get-secret:
    runs-on: ubuntu-latest
    # permission can be added at job level or workflow level
    permissions:
        id-token: write   # This is required for requesting the JWT
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Determine Environment and Read Variables
        id: env_vars
        run: |
            # Determine the environment based on the branch name
            if [[ ${{ github.ref }} == refs/heads/prod ]]; then
            ENV_FILE="env_var/prod_var"
            elif [[ ${{ github.ref }} == refs/heads/stage ]]; then
            ENV_FILE="env_var/stage_var"
            else
            ENV_FILE="env_var/dev_var"
            fi

            # Read the variables from the selected environment file
            source $ENV_FILE

            # Export BUILD_ENV as an environment variable
            echo "BUILD_ENV=$BUILD_ENV" >> $GITHUB_ENV
            echo "AWS_REGION=$AWS_REGION" >> $GITHUB_ENV
            echo "ROLE_TO_ASSUME=$ROLE_TO_ASSUME" >> $GITHUB_ENV
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
            aws-region: ap-southeast-1
            role-to-assume: ${{ steps.env_vars.outputs.ROLE_TO_ASSUME }}
      - name: aws cli show Secret
        run: |
          aws secretsmanager get-secret-value --secret-id POHLENG-SECRET
      - name: aws cli show SSM
        run: |
          aws ssm get-parameter --name pohleng-parameter