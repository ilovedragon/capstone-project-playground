name: CICD for Nodejs Application with Docker
run-name: ${{ github.actor }} is running CICD for Nodejs Application with Docker

on:
  push:
    branches: 
        - feature/*
        - dev
  workflow_dispatch:

# permission can be added at job level or workflow level     
permissions: 
    id-token: write   # This is required for requesting the JWT 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: print environment
      run: | 
        echo "The current environment is ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

    - name: your action
      run: |
        echo "Now you can continue with your project!"
    
  job-get-aws-info-workflow:
    uses: ./.github/workflows/reusable-get-aws-info-workflow.yml


  get-secret:
    runs-on: ubuntu-latest
    needs: job-get-aws-info-workflow
    steps:
    - name: Debug step
      run: |
           echo "role to asume is ${{ needs.job-get-aws-info-workflow.outputs.role_to_assume }}"
           echo "aws region is ${{ needs.job-get-aws-info-workflow.outputs.aws_region }} "
    - uses: actions/checkout@v2 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
      # synxtax is "needs.<reusable>.outputs.<output>""
          role-to-assume: ${{ needs.job-get-aws-info-workflow.outputs.role_to_assume }}
          aws-region: ${{ needs.job-get-aws-info-workflow.outputs.aws_region }}
    - name: aws cli show Secret
      run: |
          aws secretsmanager get-secret-value --secret-id POHLENG-SECRET
    - name: aws cli show SSM
      run: |
          aws ssm get-parameter --name pohleng-parameter


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
    - name: aws cli show Secret
      run: |
          aws secretsmanager get-secret-value --secret-id POHLENG-SECRET
    - name: aws cli show SSM
      run: |
          aws ssm get-parameter --name pohleng-parameter
 

          
          
